from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import asyncio

# üîπ –¢–≤–æ–π —Ç–æ–∫–µ–Ω (–Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π –µ–≥–æ –¥—Ä—É–≥–∏–º!)
TOKEN = "8492691594:AAFSmXXPnv3lL_SEwyJJs9rumwQtisM7r_U"

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üëã\n–Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –æ—Ç dias_helper.\n–ù–∞–ø–∏—à–∏ /menu, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é.")

# –ö–æ–º–∞–Ω–¥–∞ /menu
@dp.message(Command("menu"))
async def menu(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∏—Ä–∞–º–∏–¥–∞"),
                KeyboardButton(text="üé£ –§–∏—à–∏–Ω–≥"),
            ],
            [
                KeyboardButton(text="üè¶ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"),
                KeyboardButton(text="üë§ –ö—Ç–æ —Ç–∞–∫–∏–µ –¥—Ä–æ–ø—ã"),
            ],
        ],
        resize_keyboard=True
    )

    await message.answer("–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–º—É üëá", reply_markup=keyboard)


# üí∞ –û—Ç–≤–µ—Ç –ø—Ä–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ø–∏—Ä–∞–º–∏–¥—É
@dp.message(lambda message: message.text == "üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∏—Ä–∞–º–∏–¥–∞")
async def pyramid_info(message: types.Message):
    await message.answer(
        "üí∞ **–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∏—Ä–∞–º–∏–¥–∞** ‚Äî —ç—Ç–æ —Å—Ö–µ–º–∞, –≥–¥–µ –ø—Ä–∏–±—ã–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –Ω–µ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞, "
        "–∞ –∏–∑ –≤–ª–æ–∂–µ–Ω–∏–π –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n\nüö´ –¢–∞–∫–∏–µ —Å—Ö–µ–º—ã –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã –∏ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ—Ç–µ—Ä–µ –¥–µ–Ω–µ–≥."
    )


# üé£ –û—Ç–≤–µ—Ç –ø—Ä–æ —Ñ–∏—à–∏–Ω–≥
@dp.message(lambda message: message.text == "üé£ –§–∏—à–∏–Ω–≥")
async def phishing_info(message: types.Message):
    await message.answer(
        "üé£ **–§–∏—à–∏–Ω–≥** ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –æ–±–º–∞–Ω–∞, –∫–æ–≥–¥–∞ –º–æ—à–µ–Ω–Ω–∏–∫–∏ –≤—ã–¥–∞—é—Ç —Å–µ–±—è –∑–∞ –±–∞–Ω–∫–∏ –∏–ª–∏ —Å–µ—Ä–≤–∏—Å—ã, "
        "—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–≤–æ–∏ –ø–∞—Ä–æ–ª–∏ –∏ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç.\n\n‚ö†Ô∏è –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º —Å—Å—ã–ª–∫–∞–º!"
    )


# üè¶ –û—Ç–≤–µ—Ç –ø—Ä–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
@dp.message(lambda message: message.text == "üè¶ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
async def safety_info(message: types.Message):
    await message.answer(
        "üè¶ **–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** ‚Äî —ç—Ç–æ —É–º–µ–Ω–∏–µ –∑–∞—â–∏—â–∞—Ç—å —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏ –∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ "
        "–æ—Ç –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–∏—Å–∫–æ–≤.\n\n‚úÖ –ü—Ä–æ–≤–µ—Ä—è–π –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π –ø–∞—Ä–æ–ª–∏ –∏ –±—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω –æ–Ω–ª–∞–π–Ω."
    )


# üë§ –û—Ç–≤–µ—Ç –ø—Ä–æ –¥—Ä–æ–ø–æ–≤
@dp.message(lambda message: message.text == "üë§ –ö—Ç–æ —Ç–∞–∫–∏–µ –¥—Ä–æ–ø—ã")
async def drops_info(message: types.Message):
    await message.answer(
        "üë§ **–î—Ä–æ–ø (–¥–µ–Ω–µ–∂–Ω—ã–π –º—É–ª)** ‚Äî —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "
        "—Å–≤–æ–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —á—É–∂–∏—Ö –¥–µ–Ω–µ–≥.\n\n‚ö†Ô∏è –≠—Ç–æ –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ –∏ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —É–≥–æ–ª–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏."
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
